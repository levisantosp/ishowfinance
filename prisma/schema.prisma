generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  email         String    @unique
  emailVerified Boolean   @default(false)
  name          String
  lastName      String?
  accounts      Account[]
  sessions      Session[]
  updatedAt     DateTime  @updatedAt
  image         String?

  @@map("user")
}

model Account {
  id                    String    @id @default(cuid())
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                String
  provider              String?
  providerAccountId     String?
  accessToken           String?
  refreshToken          String?
  expiresAt             DateTime?
  accountId             String
  providerId            String
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map("account")
}

model Session {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  token     String    @unique
  expiresAt DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  ipAddress String?
  userAgent String?

  @@index([userId, token])
  @@map("session")
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, value])
  @@map("verification")
}
